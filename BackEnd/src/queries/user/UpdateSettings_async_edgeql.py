# AUTOGENERATED FROM 'src/queries/user/UpdateSettings.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateSettingsResult(NoPydanticValidation):
    id: uuid.UUID


async def UpdateSettings(
    executor: gel.AsyncIOExecutor,
    *,
    bank_account: uuid.UUID | None = None,
    record_title: str | None = None,
    movement_title: str | None = None,
    entity_title: str | None = None,
    account_types: list[str] | None = None,
    entity_types: list[str] | None = None,
    entity_document_types: list[str] | None = None,
    contact_number_types: list[str] | None = None,
    record_types: list[str] | None = None,
    record_status: list[str] | None = None,
    movement_income_types: list[str] | None = None,
    movement_expense_types: list[str] | None = None,
    scheduler_types: list[str] | None = None,
    movement_cycle_types: list[str] | None = None,
) -> UpdateSettingsResult | None:
    return await executor.query_single(
        """\
        with user:= global current_user.settings,
        bank_account:= <optional uuid>$bank_account,
        account := assert_single((select BankAccount filter .id = bank_account)) if exists bank_account else <BankAccount>{},
        update user set {
            default_bank_account:= account ?? .default_bank_account,
            record_title := <optional str>$record_title ?? .record_title,
            movement_title := <optional str>$movement_title ?? .movement_title,
            entity_title := <optional str>$entity_title ?? .entity_title,
            account_types:= <optional array<str>>$account_types ?? .account_types,
            entity_types:= <optional array<str>>$entity_types ?? .entity_types,
            entity_document_types:=<optional array<str>>$entity_document_types ?? .entity_document_types,
            contact_number_types:= <optional array<str>>$contact_number_types ?? .contact_number_types,
            record_types:= <optional array<str>>$record_types ?? .record_types,
            record_status:= <optional array<str>>$record_status ?? .record_status,
            movement_income_types:= <optional array<str>>$movement_income_types ?? .movement_income_types,
            movement_expense_types:= <optional array<str>>$movement_expense_types ?? .movement_expense_types,
            scheduler_types:= <optional array<str>>$scheduler_types ?? .scheduler_types,
            movement_cycle_types:= <optional array<str>>$movement_cycle_types ?? .movement_cycle_types
        }\
        """,
        bank_account=bank_account,
        record_title=record_title,
        movement_title=movement_title,
        entity_title=entity_title,
        account_types=account_types,
        entity_types=entity_types,
        entity_document_types=entity_document_types,
        contact_number_types=contact_number_types,
        record_types=record_types,
        record_status=record_status,
        movement_income_types=movement_income_types,
        movement_expense_types=movement_expense_types,
        scheduler_types=scheduler_types,
        movement_cycle_types=movement_cycle_types,
    )
