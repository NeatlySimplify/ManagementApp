# AUTOGENERATED FROM 'src/queries/user/UpdateUserAuth.edgeql' WITH:
#     $ gel-py


from __future__ import annotations

import dataclasses
import uuid

import gel


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = list
        return []


@dataclasses.dataclass
class UpdateUserAuthResult(NoPydanticValidation):
    id: uuid.UUID


async def UpdateUserAuth(
    executor: gel.AsyncIOExecutor,
    *,
    email: str | None = None,
    password: str | None = None,
    id: uuid.UUID,
) -> UpdateUserAuthResult | None:
    return await executor.query_single(
        """\
        with raw_email:= <optional str>$email,
        str_email:= (if exists raw_email then raw_email else <str>{}),
        raw_password:= <optional str>$password,
        str_password:=(if exists raw_password then raw_password else <str>{}),
        update User filter .id=<uuid>$id set {
            email := str_email ?? .email,
            password := str_password ?? .password,
        };\
        """,
        email=email,
        password=password,
        id=id,
    )
