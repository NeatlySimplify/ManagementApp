# AUTOGENERATED FROM 'src/queries/user/GetUserAuth.edgeql' WITH:
#     $ gel-py


from __future__ import annotations

import dataclasses
import uuid

import gel


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = list
        return []


@dataclasses.dataclass
class GetUserAuthResult(NoPydanticValidation):
    id: uuid.UUID
    password: str
    refresh_token: uuid.UUID | None
    use_token: bool | None


async def GetUserAuth(
    executor: gel.AsyncIOExecutor,
    *,
    email: str,
) -> GetUserAuthResult | None:
    return await executor.query_single(
        """\
        select User {
            id,
            password,
            refresh_token,
            use_token,
        } filter .email = <str>$email limit 1;\
        """,
        email=email,
    )
