# AUTOGENERATED FROM 'src/queries/entity/UpdateContact.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateContactResult(NoPydanticValidation):
    id: uuid.UUID


async def UpdateContact(
    executor: gel.AsyncIOExecutor,
    *,
    type_tag: str | None = None,
    extra_email: str | None = None,
    notes: str | None = None,
    number: str | None = None,
    contact: uuid.UUID,
) -> UpdateContactResult | None:
    return await executor.query_single(
        """\
        update Contact filter .id = <uuid>$contact set{
            type_tag:= <optional str>$type_tag ?? .type_tag,
            extra_email:= <optional str>$extra_email ?? .extra_email,
            notes:=<optional json>$notes ?? .notes,
            number:= <optional str>$number ?? .number,
        }\
        """,
        type_tag=type_tag,
        extra_email=extra_email,
        notes=notes,
        number=number,
        contact=contact,
    )
