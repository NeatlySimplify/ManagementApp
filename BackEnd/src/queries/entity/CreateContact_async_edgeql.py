# AUTOGENERATED FROM 'src/queries/entity/CreateContact.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateContactResult(NoPydanticValidation):
    id: uuid.UUID


async def CreateContact(
    executor: gel.AsyncIOExecutor,
    *,
    name: str,
    email: str | None = None,
    number: str,
    details: str | None = None,
    entity: uuid.UUID,
) -> CreateContactResult:
    return await executor.query_single(
        """\
        with add_contact:= (
            insert Contact{
                name:= <str>$name,
                email:= <optional str>$email,
                number:= <json>$number,
                details:= <optional json>$details
            }
        ),
        update_entity:= (
            update Entity filter .id = <uuid>$entity set {
                phone += add_contact
            }
        )
        select add_contact{id}\
        """,
        name=name,
        email=email,
        number=number,
        details=details,
        entity=entity,
    )
