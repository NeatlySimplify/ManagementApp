# AUTOGENERATED FROM 'src/queries/entity/GetEntity.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import datetime
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetEntityResult(NoPydanticValidation):
    id: uuid.UUID
    email: str
    type_tag: str | None
    document_type: str | None
    status: bool | None
    document: str | None
    name: str | None
    sex: str | None
    relationship_status: str | None
    notes: str | None
    birth: datetime.date | None
    phone: list[GetEntityResultPhoneItem]
    address: list[GetEntityResultAddressItem]


@dataclasses.dataclass
class GetEntityResultAddressItem(NoPydanticValidation):
    id: uuid.UUID
    city: str | None
    complement: str | None
    district: str | None
    number: int | None
    postal: str | None
    state: str | None
    street: str | None


@dataclasses.dataclass
class GetEntityResultPhoneItem(NoPydanticValidation):
    id: uuid.UUID
    extra_email: str | None
    notes: str | None
    number: str | None
    type_tag: str | None


async def GetEntity(
    executor: gel.AsyncIOExecutor,
    *,
    entity: uuid.UUID,
) -> GetEntityResult | None:
    return await executor.query_single(
        """\
        select Entity {
            email,
            type_tag,
            document_type,
            status,
            document,
            name,
            sex,
            relationship_status,
            notes,
            birth,
            phone: {*},
            address: {*}
        } filter .id = <uuid>$entity\
        """,
        entity=entity,
    )
