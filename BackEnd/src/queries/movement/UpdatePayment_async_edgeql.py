# AUTOGENERATED FROM 'src/queries/movement/UpdatePayment.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import datetime
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdatePaymentResult(NoPydanticValidation):
    id: uuid.UUID


async def UpdatePayment(
    executor: gel.AsyncIOExecutor,
    *,
    account: uuid.UUID | None = None,
    value: str | None = None,
    name: str | None = None,
    ignore_in_totals: bool | None = None,
    category_tag: str | None = None,
    paymentDate: datetime.date | None = None,
    is_due: datetime.date | None = None,
    status: bool | None = None,
    payment_id: uuid.UUID,
) -> UpdatePaymentResult | None:
    return await executor.query_single(
        """\
        with new_account:= <optional uuid>$account,
        bank_account := assert_single((select BankAccount filter .id = new_account)) if exists new_account else <BankAccount>{},
        raw_value:= <optional str>$value,
        decimal_value:= (to_decimal(raw_value, 'FM999999999999D99') if exists raw_value else <decimal>{})
        update Payment filter .id = <uuid>$payment_id set {
            name:= <optional str>$name ?? .name,
            value:= decimal_value ?? .value,
            ignore_in_totals:= <optional bool>$ignore_in_totals ?? .ignore_in_totals,
            category_tag:= <optional str>$category_tag ?? .category_tag,
            payment_date:= <optional cal::local_date>$paymentDate ?? .payment_date,
            is_due:= <optional cal::local_date>$is_due ?? .is_due,
            status:= <optional bool>$status ?? .status,
            account:= bank_account ?? .account
        }\
        """,
        account=account,
        value=value,
        name=name,
        ignore_in_totals=ignore_in_totals,
        category_tag=category_tag,
        paymentDate=paymentDate,
        is_due=is_due,
        status=status,
        payment_id=payment_id,
    )
