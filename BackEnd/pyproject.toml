[project]
name = "BackEnd"
version = "0.1.0"
description = ""
authors = [
    {name = "Dennis",email = "ribeirodennis9@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12, <4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "pydantic (>=2.11.3,<3.0.0)",
    "gel (>=3.0.1,<4.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "dotenv (>=0.9.9,<0.10.0)",
    "pyjwt[crypto] (>=2.10.1,<3.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "python-dateutil (>=2.9.0.post0,<3.0.0)",
    "requests (>=2.32.4,<3.0.0)",
    "cryptography (>=45.0.5,<46.0.0)",
]

[tool.poetry]
packages = [{include = "src"}]
[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.group.dev.dependencies]
fastapi-cli = "^0.0.7"
rich = "^14.0.0"
taskipy = "^1.14.1"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
httpx = "^0.28.1"
ruff = "^0.11.5"
faker = "^37.1.0"
email-validator = "^2.2.0"
asgi-lifespan = "^2.1.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
fix = true
lint.select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort (import sorting)
    "UP", # pyupgrade (modern syntax)
    "A",  # flake8-builtins
    "ASYNC",  # async-specific checks
    "PIE",  # flake8-pie (prevent silent bugs, e.g. wrong default args)
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "PTH",  # flake8-use-pathlib
]
include = ["src/**/*.py", "tests/**/*.py"]
exclude = [
    "**/build/",
    "**/dist/",
    "**/__pycache__/",
    "**/queries/",
    "**/static/",
    "**/*.json",
    "**/*.md"
]

[tool.ruff.format]
quote-style = "single"  # or "single"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
# Explicitly set the loop scope for pytest-asyncio to avoid deprecation warnings
asyncio_default_fixture_loop_scope = "function"  # Or "module", depending on your needs

[tool.taskipy.tasks]
run = "task ruff && pytest && task app"
ruff = "ruff check --fix src/ && ruff check --fix tests/ && ruff format src/ && ruff format tests/"
app = "fastapi dev src/main.py"
build = "poetry build --clean -f wheel"
